{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.2", "generated_at": "2025-02-25T11:38:09.796926Z", "invocation_id": "82dc4ec8-525e-4082-a2f3-0fe7924331a2", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-25T11:38:01.484522Z", "completed_at": "2025-02-25T11:38:01.506382Z"}, {"name": "execute", "started_at": "2025-02-25T11:38:01.507314Z", "completed_at": "2025-02-25T11:38:05.994522Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.512892961502075, "adapter_response": {"_message": "CREATE TABLE (63.0 rows, 2.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 63, "bytes_processed": 2075, "bytes_billed": 10485760, "location": "US", "project_id": "gerolingcp", "job_id": "8386a4ca-9e06-4a91-ab0c-4c805f5a5482", "slot_ms": 21410}, "message": "CREATE TABLE (63.0 rows, 2.0 KiB processed)", "failures": null, "unique_id": "model.weather_api.weather", "compiled": true, "compiled_code": "\n    WITH dados_brutos AS (\n        SELECT \n            semana AS date, \n            name AS location, \n            CAST(tempmax AS FLOAT64) AS temperature_max, \n            CAST(tempmin AS FLOAT64) AS temperature_min \n        FROM `gerolingcp`.`WeatherAPI_External`.`weather_data`\n    )\n\n    SELECT *\n    FROM dados_brutos", "relation_name": "`gerolingcp`.`WeatherAPI`.`weather`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-25T11:38:06.017736Z", "completed_at": "2025-02-25T11:38:06.030590Z"}, {"name": "execute", "started_at": "2025-02-25T11:38:06.031717Z", "completed_at": "2025-02-25T11:38:09.751960Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.7364048957824707, "adapter_response": {"_message": "CREATE TABLE (9.0 rows, 2.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 9, "bytes_processed": 2856, "bytes_billed": 10485760, "location": "US", "project_id": "gerolingcp", "job_id": "e089afd6-330b-45d6-9f5a-dea0c06e3acc", "slot_ms": 13529}, "message": "CREATE TABLE (9.0 rows, 2.8 KiB processed)", "failures": null, "unique_id": "model.weather_api.weather_summary", "compiled": true, "compiled_code": "\n\nSELECT \n    location, \n    date, \n    MAX(temperature_max) AS TEMPMAX, \n    MIN(temperature_min) AS TEMPMIN, \n    AVG(temperature_max) AS AVG_TEMPMAX, \n    AVG(temperature_min) AS AVG_TEMPMIN \nFROM `gerolingcp`.`WeatherAPI`.`weather`\nGROUP BY location, date", "relation_name": "`gerolingcp`.`WeatherAPI_Analytics`.`weather_summary`", "batch_results": null}], "elapsed_time": 10.5052011013031, "args": {"quiet": false, "use_colors_file": true, "require_explicit_package_overrides_for_builtin_materializations": true, "empty": false, "strict_mode": false, "use_colors": true, "state_modified_compare_vars": false, "log_format": "default", "log_file_max_bytes": 10485760, "print": true, "skip_nodes_if_on_run_start_fails": false, "require_yaml_configuration_for_mf_time_spines": false, "require_resource_names_without_spaces": false, "state_modified_compare_more_unrendered_values": false, "send_anonymous_usage_stats": true, "printer_width": 80, "populate_cache": true, "warn_error_options": {"include": [], "exclude": []}, "log_level": "info", "log_path": "/opt/airflow/dags/WeatherAPI/.dbt/logs", "defer": false, "require_nested_cumulative_type_params": false, "show_resource_report": false, "indirect_selection": "eager", "version_check": true, "source_freshness_run_project_hooks": false, "write_json": true, "favor_state": false, "vars": {}, "cache_selected_only": false, "invocation_command": "dbt run --profiles-dir /opt/airflow/dags/WeatherAPI/.dbt --project-dir /opt/airflow/dags/WeatherAPI/.dbt", "profiles_dir": "/opt/airflow/dags/WeatherAPI/.dbt", "select": [], "macro_debugging": false, "log_format_file": "debug", "exclude": [], "log_level_file": "debug", "which": "run", "require_batched_execution_for_custom_microbatch_strategy": false, "static_parser": true, "introspect": true, "project_dir": "/opt/airflow/dags/WeatherAPI/.dbt", "partial_parse_file_diff": true, "partial_parse": true}}